version: '3'
services:
  notifications_generator:
    build:
      context: ./notifications_generator
      dockerfile: DockerFile
    image: notifications_generator:latest
    container_name: notifications_generator
    depends_on:
      - postgres
    expose:
      - "8000"
    env_file:
      - ./.env

  rabbitmq:
    env_file:
      - .env
    container_name: rabbitmq
    hostname: ${RABBITMQ__HOST}
    image: rabbitmq:3.11-management
    restart:
      always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ__USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ__PASSWORD}

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:15-alpine
#    volumes:
#      - ./postgres_data:/var/lib/postgresql/data/
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES__USER}
      - POSTGRES_PASSWORD=${POSTGRES__PASSWORD}
      - POSTGRES_DB=${POSTGRES__DBNAME}
    ports:
      - "5432:5432"

  admin-panel:
    container_name: admin-panel
    build: admin_panel
    restart:
      always
    ports:
      - "8000:8000"
    env_file:
      - .env

  notifications_service:
    build:
      context: ./notifications_service
      dockerfile: DockerFile
    image: notifications_service:latest
#    build: notifications_service
    container_name: notifications_service
    env_file:
      - .env
    hostname: ${FASTAPI__HOST}
    restart: always
    ports:
      - "8001:8001"
    depends_on:
      - rabbitmq